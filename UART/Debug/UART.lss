
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b12  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  00800060  00800060  00000b86  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a30  00000000  00000000  00000c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000670  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a6  00000000  00000000  00001cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  000020a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cc  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b0  00000000  00000000  000025a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002b58  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <log+0x3c>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a2 39       	cpi	r26, 0x92	; 146
  ee:	b2 07       	cpc	r27, r18
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 9c 01 	call	0x338	; 0x338 <main>
  f6:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <uart_init>:
	uint8_t i = 0;
	while (string[i] != '\0')
	{
		uart_sendChar(string[i++]);
	}
}
  fe:	2a b1       	in	r18, 0x0a	; 10
 100:	28 61       	ori	r18, 0x18	; 24
 102:	2a b9       	out	0x0a, r18	; 10
 104:	2a b1       	in	r18, 0x0a	; 10
 106:	28 7f       	andi	r18, 0xF8	; 248
 108:	2a b9       	out	0x0a, r18	; 10
 10a:	20 b5       	in	r18, 0x20	; 32
 10c:	2f 77       	andi	r18, 0x7F	; 127
 10e:	20 bd       	out	0x20, r18	; 32
 110:	dc 01       	movw	r26, r24
 112:	cb 01       	movw	r24, r22
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	aa 1f       	adc	r26, r26
 11a:	bb 1f       	adc	r27, r27
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	aa 1f       	adc	r26, r26
 122:	bb 1f       	adc	r27, r27
 124:	9c 01       	movw	r18, r24
 126:	ad 01       	movw	r20, r26
 128:	22 0f       	add	r18, r18
 12a:	33 1f       	adc	r19, r19
 12c:	44 1f       	adc	r20, r20
 12e:	55 1f       	adc	r21, r21
 130:	22 0f       	add	r18, r18
 132:	33 1f       	adc	r19, r19
 134:	44 1f       	adc	r20, r20
 136:	55 1f       	adc	r21, r21
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	72 e1       	ldi	r23, 0x12	; 18
 13c:	8a e7       	ldi	r24, 0x7A	; 122
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 46 05 	call	0xa8c	; 0xa8c <__udivmodsi4>
 144:	da 01       	movw	r26, r20
 146:	c9 01       	movw	r24, r18
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	a1 09       	sbc	r26, r1
 14c:	b1 09       	sbc	r27, r1
 14e:	89 2f       	mov	r24, r25
 150:	9a 2f       	mov	r25, r26
 152:	ab 2f       	mov	r26, r27
 154:	bb 27       	eor	r27, r27
 156:	80 bd       	out	0x20, r24	; 32
 158:	21 50       	subi	r18, 0x01	; 1
 15a:	29 b9       	out	0x09, r18	; 9
 15c:	80 b5       	in	r24, 0x20	; 32
 15e:	86 68       	ori	r24, 0x86	; 134
 160:	80 bd       	out	0x20, r24	; 32
 162:	80 b5       	in	r24, 0x20	; 32
 164:	86 78       	andi	r24, 0x86	; 134
 166:	80 bd       	out	0x20, r24	; 32
 168:	08 95       	ret

0000016a <uart_sendChar>:
 16a:	5d 9b       	sbis	0x0b, 5	; 11
 16c:	fe cf       	rjmp	.-4      	; 0x16a <uart_sendChar>
 16e:	8c b9       	out	0x0c, r24	; 12
 170:	08 95       	ret

00000172 <uart_sendString_ln>:

void uart_sendString_ln(char* string)
{
 172:	0f 93       	push	r16
 174:	1f 93       	push	r17
 176:	cf 93       	push	r28
 178:	8c 01       	movw	r16, r24
	uint8_t i = 0;
 17a:	c0 e0       	ldi	r28, 0x00	; 0
	while (string[i] != '\0')
 17c:	03 c0       	rjmp	.+6      	; 0x184 <uart_sendString_ln+0x12>
	{
		uart_sendChar(string[i++]);
 17e:	cf 5f       	subi	r28, 0xFF	; 255
 180:	0e 94 b5 00 	call	0x16a	; 0x16a <uart_sendChar>
}

void uart_sendString_ln(char* string)
{
	uint8_t i = 0;
	while (string[i] != '\0')
 184:	f8 01       	movw	r30, r16
 186:	ec 0f       	add	r30, r28
 188:	f1 1d       	adc	r31, r1
 18a:	80 81       	ld	r24, Z
 18c:	81 11       	cpse	r24, r1
 18e:	f7 cf       	rjmp	.-18     	; 0x17e <uart_sendString_ln+0xc>
	{
		uart_sendChar(string[i++]);
	}
	uart_sendChar('\n');
 190:	8a e0       	ldi	r24, 0x0A	; 10
 192:	0e 94 b5 00 	call	0x16a	; 0x16a <uart_sendChar>
}
 196:	cf 91       	pop	r28
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	08 95       	ret

0000019e <reverse>:

void reverse(char* string, int len)
{
	int current_position = 0, next_position = len - 1, temp;
 19e:	61 50       	subi	r22, 0x01	; 1
 1a0:	71 09       	sbc	r23, r1
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e0       	ldi	r19, 0x00	; 0
	while (current_position < next_position)
 1a6:	0e c0       	rjmp	.+28     	; 0x1c4 <reverse+0x26>
	{
		temp = string[current_position];
 1a8:	dc 01       	movw	r26, r24
 1aa:	a2 0f       	add	r26, r18
 1ac:	b3 1f       	adc	r27, r19
 1ae:	4c 91       	ld	r20, X
		string[current_position] = string[next_position];
 1b0:	fc 01       	movw	r30, r24
 1b2:	e6 0f       	add	r30, r22
 1b4:	f7 1f       	adc	r31, r23
 1b6:	50 81       	ld	r21, Z
 1b8:	5c 93       	st	X, r21
		string[next_position] = temp;
 1ba:	40 83       	st	Z, r20
		current_position++;
 1bc:	2f 5f       	subi	r18, 0xFF	; 255
 1be:	3f 4f       	sbci	r19, 0xFF	; 255
		next_position--;
 1c0:	61 50       	subi	r22, 0x01	; 1
 1c2:	71 09       	sbc	r23, r1
}

void reverse(char* string, int len)
{
	int current_position = 0, next_position = len - 1, temp;
	while (current_position < next_position)
 1c4:	26 17       	cp	r18, r22
 1c6:	37 07       	cpc	r19, r23
 1c8:	7c f3       	brlt	.-34     	; 0x1a8 <reverse+0xa>
		string[current_position] = string[next_position];
		string[next_position] = temp;
		current_position++;
		next_position--;
	}
}
 1ca:	08 95       	ret

000001cc <intToStr>:

int intToStr(long val, char destination[], int digits)
{
 1cc:	cf 92       	push	r12
 1ce:	df 92       	push	r13
 1d0:	ef 92       	push	r14
 1d2:	ff 92       	push	r15
 1d4:	0f 93       	push	r16
 1d6:	1f 93       	push	r17
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	8a 01       	movw	r16, r20
 1de:	69 01       	movw	r12, r18
	int i = 0;
 1e0:	c0 e0       	ldi	r28, 0x00	; 0
 1e2:	d0 e0       	ldi	r29, 0x00	; 0
	while (val)
 1e4:	11 c0       	rjmp	.+34     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
	{
		destination[i++] = (val % 10) + '0';
 1e6:	78 01       	movw	r14, r16
 1e8:	ec 0e       	add	r14, r28
 1ea:	fd 1e       	adc	r15, r29
 1ec:	2a e0       	ldi	r18, 0x0A	; 10
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	40 e0       	ldi	r20, 0x00	; 0
 1f2:	50 e0       	ldi	r21, 0x00	; 0
 1f4:	0e 94 68 05 	call	0xad0	; 0xad0 <__divmodsi4>
 1f8:	60 5d       	subi	r22, 0xD0	; 208
 1fa:	f7 01       	movw	r30, r14
 1fc:	60 83       	st	Z, r22
		val = val / 10;
 1fe:	62 2f       	mov	r22, r18
 200:	73 2f       	mov	r23, r19
 202:	84 2f       	mov	r24, r20
 204:	95 2f       	mov	r25, r21
int intToStr(long val, char destination[], int digits)
{
	int i = 0;
	while (val)
	{
		destination[i++] = (val % 10) + '0';
 206:	21 96       	adiw	r28, 0x01	; 1
}

int intToStr(long val, char destination[], int digits)
{
	int i = 0;
	while (val)
 208:	61 15       	cp	r22, r1
 20a:	71 05       	cpc	r23, r1
 20c:	81 05       	cpc	r24, r1
 20e:	91 05       	cpc	r25, r1
 210:	51 f7       	brne	.-44     	; 0x1e6 <intToStr+0x1a>
 212:	06 c0       	rjmp	.+12     	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
		val = val / 10;
	}

	/* Add 0s in beginning. */
	while (i < digits)
	destination[i++] = '0';
 214:	f8 01       	movw	r30, r16
 216:	ec 0f       	add	r30, r28
 218:	fd 1f       	adc	r31, r29
 21a:	80 e3       	ldi	r24, 0x30	; 48
 21c:	80 83       	st	Z, r24
 21e:	21 96       	adiw	r28, 0x01	; 1
		destination[i++] = (val % 10) + '0';
		val = val / 10;
	}

	/* Add 0s in beginning. */
	while (i < digits)
 220:	cc 15       	cp	r28, r12
 222:	dd 05       	cpc	r29, r13
 224:	bc f3       	brlt	.-18     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
	destination[i++] = '0';

	/* Reverse string. */
	reverse(destination, i);
 226:	be 01       	movw	r22, r28
 228:	c8 01       	movw	r24, r16
 22a:	0e 94 cf 00 	call	0x19e	; 0x19e <reverse>
	destination[i] = '\0';
 22e:	f8 01       	movw	r30, r16
 230:	ec 0f       	add	r30, r28
 232:	fd 1f       	adc	r31, r29
 234:	10 82       	st	Z, r1
	return i;
}
 236:	ce 01       	movw	r24, r28
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	1f 91       	pop	r17
 23e:	0f 91       	pop	r16
 240:	ff 90       	pop	r15
 242:	ef 90       	pop	r14
 244:	df 90       	pop	r13
 246:	cf 90       	pop	r12
 248:	08 95       	ret

0000024a <uart_sendInt>:

void uart_sendInt(long val)
{
	intToStr(val, buff, 0);
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 e6       	ldi	r20, 0x60	; 96
 250:	50 e0       	ldi	r21, 0x00	; 0
 252:	0e 94 e6 00 	call	0x1cc	; 0x1cc <intToStr>
	uart_sendString_ln(buff);
 256:	80 e6       	ldi	r24, 0x60	; 96
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 b9 00 	call	0x172	; 0x172 <uart_sendString_ln>
 25e:	08 95       	ret

00000260 <ftoa>:
}

void ftoa(double val, char* res, int afterpoint)
{
 260:	8f 92       	push	r8
 262:	9f 92       	push	r9
 264:	af 92       	push	r10
 266:	bf 92       	push	r11
 268:	cf 92       	push	r12
 26a:	df 92       	push	r13
 26c:	ef 92       	push	r14
 26e:	ff 92       	push	r15
 270:	0f 93       	push	r16
 272:	1f 93       	push	r17
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	4b 01       	movw	r8, r22
 27a:	5c 01       	movw	r10, r24
 27c:	8a 01       	movw	r16, r20
 27e:	e9 01       	movw	r28, r18
	// Extract integer part
	int ipart = (int)val;
 280:	0e 94 1e 02 	call	0x43c	; 0x43c <__fixsfsi>

	// Extract floating part
	float fpart = val - (float)ipart;
 284:	6b 01       	movw	r12, r22
 286:	77 0f       	add	r23, r23
 288:	ee 08       	sbc	r14, r14
 28a:	ff 08       	sbc	r15, r15
 28c:	c7 01       	movw	r24, r14
 28e:	b6 01       	movw	r22, r12
 290:	0e 94 56 02 	call	0x4ac	; 0x4ac <__floatsisf>
 294:	9b 01       	movw	r18, r22
 296:	ac 01       	movw	r20, r24
 298:	c5 01       	movw	r24, r10
 29a:	b4 01       	movw	r22, r8
 29c:	0e 94 b1 01 	call	0x362	; 0x362 <__subsf3>
 2a0:	4b 01       	movw	r8, r22
 2a2:	5c 01       	movw	r10, r24

	// convert integer part to string
	int i = intToStr(ipart, res, 0);
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	a8 01       	movw	r20, r16
 2aa:	c7 01       	movw	r24, r14
 2ac:	b6 01       	movw	r22, r12
 2ae:	0e 94 e6 00 	call	0x1cc	; 0x1cc <intToStr>
 2b2:	7c 01       	movw	r14, r24

	// check for display option after point
	if (afterpoint != 0) {
 2b4:	20 97       	sbiw	r28, 0x00	; 0
 2b6:	49 f1       	breq	.+82     	; 0x30a <ftoa+0xaa>
		res[i] = '.'; // add dot
 2b8:	f8 01       	movw	r30, r16
 2ba:	e8 0f       	add	r30, r24
 2bc:	f9 1f       	adc	r31, r25
 2be:	8e e2       	ldi	r24, 0x2E	; 46
 2c0:	80 83       	st	Z, r24

		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
 2c2:	be 01       	movw	r22, r28
 2c4:	0d 2e       	mov	r0, r29
 2c6:	00 0c       	add	r0, r0
 2c8:	88 0b       	sbc	r24, r24
 2ca:	99 0b       	sbc	r25, r25
 2cc:	0e 94 56 02 	call	0x4ac	; 0x4ac <__floatsisf>
 2d0:	9b 01       	movw	r18, r22
 2d2:	ac 01       	movw	r20, r24
 2d4:	60 e0       	ldi	r22, 0x00	; 0
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	80 e2       	ldi	r24, 0x20	; 32
 2da:	91 e4       	ldi	r25, 0x41	; 65
 2dc:	0e 94 4f 03 	call	0x69e	; 0x69e <pow>
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	c5 01       	movw	r24, r10
 2e6:	b4 01       	movw	r22, r8
 2e8:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__mulsf3>

		intToStr((int)fpart, res + i + 1, afterpoint);
 2ec:	2f ef       	ldi	r18, 0xFF	; 255
 2ee:	e2 1a       	sub	r14, r18
 2f0:	f2 0a       	sbc	r15, r18
 2f2:	0e 94 1e 02 	call	0x43c	; 0x43c <__fixsfsi>
 2f6:	a8 01       	movw	r20, r16
 2f8:	4e 0d       	add	r20, r14
 2fa:	5f 1d       	adc	r21, r15
 2fc:	07 2e       	mov	r0, r23
 2fe:	00 0c       	add	r0, r0
 300:	88 0b       	sbc	r24, r24
 302:	99 0b       	sbc	r25, r25
 304:	9e 01       	movw	r18, r28
 306:	0e 94 e6 00 	call	0x1cc	; 0x1cc <intToStr>
	}
}
 30a:	df 91       	pop	r29
 30c:	cf 91       	pop	r28
 30e:	1f 91       	pop	r17
 310:	0f 91       	pop	r16
 312:	ff 90       	pop	r15
 314:	ef 90       	pop	r14
 316:	df 90       	pop	r13
 318:	cf 90       	pop	r12
 31a:	bf 90       	pop	r11
 31c:	af 90       	pop	r10
 31e:	9f 90       	pop	r9
 320:	8f 90       	pop	r8
 322:	08 95       	ret

00000324 <uart_sendFloat>:

void uart_sendFloat(double val, int afterDecimal)
{
 324:	9a 01       	movw	r18, r20
	ftoa(val, buff, afterDecimal);
 326:	40 e6       	ldi	r20, 0x60	; 96
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	0e 94 30 01 	call	0x260	; 0x260 <ftoa>
	uart_sendString_ln(buff);
 32e:	80 e6       	ldi	r24, 0x60	; 96
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	0e 94 b9 00 	call	0x172	; 0x172 <uart_sendString_ln>
 336:	08 95       	ret

00000338 <main>:
void uart_sendInt(long val);
void uart_sendFloat(double val, int afterDecimal);

int main(void)
{
	uart_init(9600);
 338:	60 e8       	ldi	r22, 0x80	; 128
 33a:	75 e2       	ldi	r23, 0x25	; 37
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 7f 00 	call	0xfe	; 0xfe <uart_init>
	
    while (1) 
    {
		//uart_sendString_ln("Nitesh");
		uart_sendInt(13);
 344:	6d e0       	ldi	r22, 0x0D	; 13
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 25 01 	call	0x24a	; 0x24a <uart_sendInt>
		uart_sendFloat(12.55, 2);
 350:	42 e0       	ldi	r20, 0x02	; 2
 352:	50 e0       	ldi	r21, 0x00	; 0
 354:	6d ec       	ldi	r22, 0xCD	; 205
 356:	7c ec       	ldi	r23, 0xCC	; 204
 358:	88 e4       	ldi	r24, 0x48	; 72
 35a:	91 e4       	ldi	r25, 0x41	; 65
 35c:	0e 94 92 01 	call	0x324	; 0x324 <uart_sendFloat>
 360:	f1 cf       	rjmp	.-30     	; 0x344 <main+0xc>

00000362 <__subsf3>:
 362:	50 58       	subi	r21, 0x80	; 128

00000364 <__addsf3>:
 364:	bb 27       	eor	r27, r27
 366:	aa 27       	eor	r26, r26
 368:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3x>
 36c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_round>
 370:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_pscA>
 374:	38 f0       	brcs	.+14     	; 0x384 <__addsf3+0x20>
 376:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_pscB>
 37a:	20 f0       	brcs	.+8      	; 0x384 <__addsf3+0x20>
 37c:	39 f4       	brne	.+14     	; 0x38c <__addsf3+0x28>
 37e:	9f 3f       	cpi	r25, 0xFF	; 255
 380:	19 f4       	brne	.+6      	; 0x388 <__addsf3+0x24>
 382:	26 f4       	brtc	.+8      	; 0x38c <__addsf3+0x28>
 384:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>
 388:	0e f4       	brtc	.+2      	; 0x38c <__addsf3+0x28>
 38a:	e0 95       	com	r30
 38c:	e7 fb       	bst	r30, 7
 38e:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>

00000392 <__addsf3x>:
 392:	e9 2f       	mov	r30, r25
 394:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_split3>
 398:	58 f3       	brcs	.-42     	; 0x370 <__addsf3+0xc>
 39a:	ba 17       	cp	r27, r26
 39c:	62 07       	cpc	r22, r18
 39e:	73 07       	cpc	r23, r19
 3a0:	84 07       	cpc	r24, r20
 3a2:	95 07       	cpc	r25, r21
 3a4:	20 f0       	brcs	.+8      	; 0x3ae <__addsf3x+0x1c>
 3a6:	79 f4       	brne	.+30     	; 0x3c6 <__addsf3x+0x34>
 3a8:	a6 f5       	brtc	.+104    	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 3aa:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_zero>
 3ae:	0e f4       	brtc	.+2      	; 0x3b2 <__addsf3x+0x20>
 3b0:	e0 95       	com	r30
 3b2:	0b 2e       	mov	r0, r27
 3b4:	ba 2f       	mov	r27, r26
 3b6:	a0 2d       	mov	r26, r0
 3b8:	0b 01       	movw	r0, r22
 3ba:	b9 01       	movw	r22, r18
 3bc:	90 01       	movw	r18, r0
 3be:	0c 01       	movw	r0, r24
 3c0:	ca 01       	movw	r24, r20
 3c2:	a0 01       	movw	r20, r0
 3c4:	11 24       	eor	r1, r1
 3c6:	ff 27       	eor	r31, r31
 3c8:	59 1b       	sub	r21, r25
 3ca:	99 f0       	breq	.+38     	; 0x3f2 <__addsf3x+0x60>
 3cc:	59 3f       	cpi	r21, 0xF9	; 249
 3ce:	50 f4       	brcc	.+20     	; 0x3e4 <__addsf3x+0x52>
 3d0:	50 3e       	cpi	r21, 0xE0	; 224
 3d2:	68 f1       	brcs	.+90     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 3d4:	1a 16       	cp	r1, r26
 3d6:	f0 40       	sbci	r31, 0x00	; 0
 3d8:	a2 2f       	mov	r26, r18
 3da:	23 2f       	mov	r18, r19
 3dc:	34 2f       	mov	r19, r20
 3de:	44 27       	eor	r20, r20
 3e0:	58 5f       	subi	r21, 0xF8	; 248
 3e2:	f3 cf       	rjmp	.-26     	; 0x3ca <__addsf3x+0x38>
 3e4:	46 95       	lsr	r20
 3e6:	37 95       	ror	r19
 3e8:	27 95       	ror	r18
 3ea:	a7 95       	ror	r26
 3ec:	f0 40       	sbci	r31, 0x00	; 0
 3ee:	53 95       	inc	r21
 3f0:	c9 f7       	brne	.-14     	; 0x3e4 <__addsf3x+0x52>
 3f2:	7e f4       	brtc	.+30     	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 3f4:	1f 16       	cp	r1, r31
 3f6:	ba 0b       	sbc	r27, r26
 3f8:	62 0b       	sbc	r22, r18
 3fa:	73 0b       	sbc	r23, r19
 3fc:	84 0b       	sbc	r24, r20
 3fe:	ba f0       	brmi	.+46     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 400:	91 50       	subi	r25, 0x01	; 1
 402:	a1 f0       	breq	.+40     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 404:	ff 0f       	add	r31, r31
 406:	bb 1f       	adc	r27, r27
 408:	66 1f       	adc	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	c2 f7       	brpl	.-16     	; 0x400 <__DATA_REGION_LENGTH__>
 410:	0e c0       	rjmp	.+28     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 412:	ba 0f       	add	r27, r26
 414:	62 1f       	adc	r22, r18
 416:	73 1f       	adc	r23, r19
 418:	84 1f       	adc	r24, r20
 41a:	48 f4       	brcc	.+18     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 41c:	87 95       	ror	r24
 41e:	77 95       	ror	r23
 420:	67 95       	ror	r22
 422:	b7 95       	ror	r27
 424:	f7 95       	ror	r31
 426:	9e 3f       	cpi	r25, 0xFE	; 254
 428:	08 f0       	brcs	.+2      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 42a:	b0 cf       	rjmp	.-160    	; 0x38c <__addsf3+0x28>
 42c:	93 95       	inc	r25
 42e:	88 0f       	add	r24, r24
 430:	08 f0       	brcs	.+2      	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 432:	99 27       	eor	r25, r25
 434:	ee 0f       	add	r30, r30
 436:	97 95       	ror	r25
 438:	87 95       	ror	r24
 43a:	08 95       	ret

0000043c <__fixsfsi>:
 43c:	0e 94 25 02 	call	0x44a	; 0x44a <__fixunssfsi>
 440:	68 94       	set
 442:	b1 11       	cpse	r27, r1
 444:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>
 448:	08 95       	ret

0000044a <__fixunssfsi>:
 44a:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_splitA>
 44e:	88 f0       	brcs	.+34     	; 0x472 <__stack+0x13>
 450:	9f 57       	subi	r25, 0x7F	; 127
 452:	98 f0       	brcs	.+38     	; 0x47a <__stack+0x1b>
 454:	b9 2f       	mov	r27, r25
 456:	99 27       	eor	r25, r25
 458:	b7 51       	subi	r27, 0x17	; 23
 45a:	b0 f0       	brcs	.+44     	; 0x488 <__stack+0x29>
 45c:	e1 f0       	breq	.+56     	; 0x496 <__stack+0x37>
 45e:	66 0f       	add	r22, r22
 460:	77 1f       	adc	r23, r23
 462:	88 1f       	adc	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	1a f0       	brmi	.+6      	; 0x46e <__stack+0xf>
 468:	ba 95       	dec	r27
 46a:	c9 f7       	brne	.-14     	; 0x45e <__fixunssfsi+0x14>
 46c:	14 c0       	rjmp	.+40     	; 0x496 <__stack+0x37>
 46e:	b1 30       	cpi	r27, 0x01	; 1
 470:	91 f0       	breq	.+36     	; 0x496 <__stack+0x37>
 472:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_zero>
 476:	b1 e0       	ldi	r27, 0x01	; 1
 478:	08 95       	ret
 47a:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_zero>
 47e:	67 2f       	mov	r22, r23
 480:	78 2f       	mov	r23, r24
 482:	88 27       	eor	r24, r24
 484:	b8 5f       	subi	r27, 0xF8	; 248
 486:	39 f0       	breq	.+14     	; 0x496 <__stack+0x37>
 488:	b9 3f       	cpi	r27, 0xF9	; 249
 48a:	cc f3       	brlt	.-14     	; 0x47e <__stack+0x1f>
 48c:	86 95       	lsr	r24
 48e:	77 95       	ror	r23
 490:	67 95       	ror	r22
 492:	b3 95       	inc	r27
 494:	d9 f7       	brne	.-10     	; 0x48c <__stack+0x2d>
 496:	3e f4       	brtc	.+14     	; 0x4a6 <__stack+0x47>
 498:	90 95       	com	r25
 49a:	80 95       	com	r24
 49c:	70 95       	com	r23
 49e:	61 95       	neg	r22
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255
 4a2:	8f 4f       	sbci	r24, 0xFF	; 255
 4a4:	9f 4f       	sbci	r25, 0xFF	; 255
 4a6:	08 95       	ret

000004a8 <__floatunsisf>:
 4a8:	e8 94       	clt
 4aa:	09 c0       	rjmp	.+18     	; 0x4be <__floatsisf+0x12>

000004ac <__floatsisf>:
 4ac:	97 fb       	bst	r25, 7
 4ae:	3e f4       	brtc	.+14     	; 0x4be <__floatsisf+0x12>
 4b0:	90 95       	com	r25
 4b2:	80 95       	com	r24
 4b4:	70 95       	com	r23
 4b6:	61 95       	neg	r22
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	99 23       	and	r25, r25
 4c0:	a9 f0       	breq	.+42     	; 0x4ec <__floatsisf+0x40>
 4c2:	f9 2f       	mov	r31, r25
 4c4:	96 e9       	ldi	r25, 0x96	; 150
 4c6:	bb 27       	eor	r27, r27
 4c8:	93 95       	inc	r25
 4ca:	f6 95       	lsr	r31
 4cc:	87 95       	ror	r24
 4ce:	77 95       	ror	r23
 4d0:	67 95       	ror	r22
 4d2:	b7 95       	ror	r27
 4d4:	f1 11       	cpse	r31, r1
 4d6:	f8 cf       	rjmp	.-16     	; 0x4c8 <__floatsisf+0x1c>
 4d8:	fa f4       	brpl	.+62     	; 0x518 <__floatsisf+0x6c>
 4da:	bb 0f       	add	r27, r27
 4dc:	11 f4       	brne	.+4      	; 0x4e2 <__floatsisf+0x36>
 4de:	60 ff       	sbrs	r22, 0
 4e0:	1b c0       	rjmp	.+54     	; 0x518 <__floatsisf+0x6c>
 4e2:	6f 5f       	subi	r22, 0xFF	; 255
 4e4:	7f 4f       	sbci	r23, 0xFF	; 255
 4e6:	8f 4f       	sbci	r24, 0xFF	; 255
 4e8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ea:	16 c0       	rjmp	.+44     	; 0x518 <__floatsisf+0x6c>
 4ec:	88 23       	and	r24, r24
 4ee:	11 f0       	breq	.+4      	; 0x4f4 <__floatsisf+0x48>
 4f0:	96 e9       	ldi	r25, 0x96	; 150
 4f2:	11 c0       	rjmp	.+34     	; 0x516 <__floatsisf+0x6a>
 4f4:	77 23       	and	r23, r23
 4f6:	21 f0       	breq	.+8      	; 0x500 <__floatsisf+0x54>
 4f8:	9e e8       	ldi	r25, 0x8E	; 142
 4fa:	87 2f       	mov	r24, r23
 4fc:	76 2f       	mov	r23, r22
 4fe:	05 c0       	rjmp	.+10     	; 0x50a <__floatsisf+0x5e>
 500:	66 23       	and	r22, r22
 502:	71 f0       	breq	.+28     	; 0x520 <__floatsisf+0x74>
 504:	96 e8       	ldi	r25, 0x86	; 134
 506:	86 2f       	mov	r24, r22
 508:	70 e0       	ldi	r23, 0x00	; 0
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	2a f0       	brmi	.+10     	; 0x518 <__floatsisf+0x6c>
 50e:	9a 95       	dec	r25
 510:	66 0f       	add	r22, r22
 512:	77 1f       	adc	r23, r23
 514:	88 1f       	adc	r24, r24
 516:	da f7       	brpl	.-10     	; 0x50e <__floatsisf+0x62>
 518:	88 0f       	add	r24, r24
 51a:	96 95       	lsr	r25
 51c:	87 95       	ror	r24
 51e:	97 f9       	bld	r25, 7
 520:	08 95       	ret

00000522 <__fp_inf>:
 522:	97 f9       	bld	r25, 7
 524:	9f 67       	ori	r25, 0x7F	; 127
 526:	80 e8       	ldi	r24, 0x80	; 128
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	60 e0       	ldi	r22, 0x00	; 0
 52c:	08 95       	ret

0000052e <__fp_nan>:
 52e:	9f ef       	ldi	r25, 0xFF	; 255
 530:	80 ec       	ldi	r24, 0xC0	; 192
 532:	08 95       	ret

00000534 <__fp_pscA>:
 534:	00 24       	eor	r0, r0
 536:	0a 94       	dec	r0
 538:	16 16       	cp	r1, r22
 53a:	17 06       	cpc	r1, r23
 53c:	18 06       	cpc	r1, r24
 53e:	09 06       	cpc	r0, r25
 540:	08 95       	ret

00000542 <__fp_pscB>:
 542:	00 24       	eor	r0, r0
 544:	0a 94       	dec	r0
 546:	12 16       	cp	r1, r18
 548:	13 06       	cpc	r1, r19
 54a:	14 06       	cpc	r1, r20
 54c:	05 06       	cpc	r0, r21
 54e:	08 95       	ret

00000550 <__fp_round>:
 550:	09 2e       	mov	r0, r25
 552:	03 94       	inc	r0
 554:	00 0c       	add	r0, r0
 556:	11 f4       	brne	.+4      	; 0x55c <__fp_round+0xc>
 558:	88 23       	and	r24, r24
 55a:	52 f0       	brmi	.+20     	; 0x570 <__fp_round+0x20>
 55c:	bb 0f       	add	r27, r27
 55e:	40 f4       	brcc	.+16     	; 0x570 <__fp_round+0x20>
 560:	bf 2b       	or	r27, r31
 562:	11 f4       	brne	.+4      	; 0x568 <__fp_round+0x18>
 564:	60 ff       	sbrs	r22, 0
 566:	04 c0       	rjmp	.+8      	; 0x570 <__fp_round+0x20>
 568:	6f 5f       	subi	r22, 0xFF	; 255
 56a:	7f 4f       	sbci	r23, 0xFF	; 255
 56c:	8f 4f       	sbci	r24, 0xFF	; 255
 56e:	9f 4f       	sbci	r25, 0xFF	; 255
 570:	08 95       	ret

00000572 <__fp_split3>:
 572:	57 fd       	sbrc	r21, 7
 574:	90 58       	subi	r25, 0x80	; 128
 576:	44 0f       	add	r20, r20
 578:	55 1f       	adc	r21, r21
 57a:	59 f0       	breq	.+22     	; 0x592 <__fp_splitA+0x10>
 57c:	5f 3f       	cpi	r21, 0xFF	; 255
 57e:	71 f0       	breq	.+28     	; 0x59c <__fp_splitA+0x1a>
 580:	47 95       	ror	r20

00000582 <__fp_splitA>:
 582:	88 0f       	add	r24, r24
 584:	97 fb       	bst	r25, 7
 586:	99 1f       	adc	r25, r25
 588:	61 f0       	breq	.+24     	; 0x5a2 <__fp_splitA+0x20>
 58a:	9f 3f       	cpi	r25, 0xFF	; 255
 58c:	79 f0       	breq	.+30     	; 0x5ac <__fp_splitA+0x2a>
 58e:	87 95       	ror	r24
 590:	08 95       	ret
 592:	12 16       	cp	r1, r18
 594:	13 06       	cpc	r1, r19
 596:	14 06       	cpc	r1, r20
 598:	55 1f       	adc	r21, r21
 59a:	f2 cf       	rjmp	.-28     	; 0x580 <__fp_split3+0xe>
 59c:	46 95       	lsr	r20
 59e:	f1 df       	rcall	.-30     	; 0x582 <__fp_splitA>
 5a0:	08 c0       	rjmp	.+16     	; 0x5b2 <__fp_splitA+0x30>
 5a2:	16 16       	cp	r1, r22
 5a4:	17 06       	cpc	r1, r23
 5a6:	18 06       	cpc	r1, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	f1 cf       	rjmp	.-30     	; 0x58e <__fp_splitA+0xc>
 5ac:	86 95       	lsr	r24
 5ae:	71 05       	cpc	r23, r1
 5b0:	61 05       	cpc	r22, r1
 5b2:	08 94       	sec
 5b4:	08 95       	ret

000005b6 <__fp_zero>:
 5b6:	e8 94       	clt

000005b8 <__fp_szero>:
 5b8:	bb 27       	eor	r27, r27
 5ba:	66 27       	eor	r22, r22
 5bc:	77 27       	eor	r23, r23
 5be:	cb 01       	movw	r24, r22
 5c0:	97 f9       	bld	r25, 7
 5c2:	08 95       	ret

000005c4 <__mulsf3>:
 5c4:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__mulsf3x>
 5c8:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_round>
 5cc:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_pscA>
 5d0:	38 f0       	brcs	.+14     	; 0x5e0 <__mulsf3+0x1c>
 5d2:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_pscB>
 5d6:	20 f0       	brcs	.+8      	; 0x5e0 <__mulsf3+0x1c>
 5d8:	95 23       	and	r25, r21
 5da:	11 f0       	breq	.+4      	; 0x5e0 <__mulsf3+0x1c>
 5dc:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 5e0:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>
 5e4:	11 24       	eor	r1, r1
 5e6:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>

000005ea <__mulsf3x>:
 5ea:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_split3>
 5ee:	70 f3       	brcs	.-36     	; 0x5cc <__mulsf3+0x8>

000005f0 <__mulsf3_pse>:
 5f0:	95 9f       	mul	r25, r21
 5f2:	c1 f3       	breq	.-16     	; 0x5e4 <__mulsf3+0x20>
 5f4:	95 0f       	add	r25, r21
 5f6:	50 e0       	ldi	r21, 0x00	; 0
 5f8:	55 1f       	adc	r21, r21
 5fa:	62 9f       	mul	r22, r18
 5fc:	f0 01       	movw	r30, r0
 5fe:	72 9f       	mul	r23, r18
 600:	bb 27       	eor	r27, r27
 602:	f0 0d       	add	r31, r0
 604:	b1 1d       	adc	r27, r1
 606:	63 9f       	mul	r22, r19
 608:	aa 27       	eor	r26, r26
 60a:	f0 0d       	add	r31, r0
 60c:	b1 1d       	adc	r27, r1
 60e:	aa 1f       	adc	r26, r26
 610:	64 9f       	mul	r22, r20
 612:	66 27       	eor	r22, r22
 614:	b0 0d       	add	r27, r0
 616:	a1 1d       	adc	r26, r1
 618:	66 1f       	adc	r22, r22
 61a:	82 9f       	mul	r24, r18
 61c:	22 27       	eor	r18, r18
 61e:	b0 0d       	add	r27, r0
 620:	a1 1d       	adc	r26, r1
 622:	62 1f       	adc	r22, r18
 624:	73 9f       	mul	r23, r19
 626:	b0 0d       	add	r27, r0
 628:	a1 1d       	adc	r26, r1
 62a:	62 1f       	adc	r22, r18
 62c:	83 9f       	mul	r24, r19
 62e:	a0 0d       	add	r26, r0
 630:	61 1d       	adc	r22, r1
 632:	22 1f       	adc	r18, r18
 634:	74 9f       	mul	r23, r20
 636:	33 27       	eor	r19, r19
 638:	a0 0d       	add	r26, r0
 63a:	61 1d       	adc	r22, r1
 63c:	23 1f       	adc	r18, r19
 63e:	84 9f       	mul	r24, r20
 640:	60 0d       	add	r22, r0
 642:	21 1d       	adc	r18, r1
 644:	82 2f       	mov	r24, r18
 646:	76 2f       	mov	r23, r22
 648:	6a 2f       	mov	r22, r26
 64a:	11 24       	eor	r1, r1
 64c:	9f 57       	subi	r25, 0x7F	; 127
 64e:	50 40       	sbci	r21, 0x00	; 0
 650:	9a f0       	brmi	.+38     	; 0x678 <__mulsf3_pse+0x88>
 652:	f1 f0       	breq	.+60     	; 0x690 <__mulsf3_pse+0xa0>
 654:	88 23       	and	r24, r24
 656:	4a f0       	brmi	.+18     	; 0x66a <__mulsf3_pse+0x7a>
 658:	ee 0f       	add	r30, r30
 65a:	ff 1f       	adc	r31, r31
 65c:	bb 1f       	adc	r27, r27
 65e:	66 1f       	adc	r22, r22
 660:	77 1f       	adc	r23, r23
 662:	88 1f       	adc	r24, r24
 664:	91 50       	subi	r25, 0x01	; 1
 666:	50 40       	sbci	r21, 0x00	; 0
 668:	a9 f7       	brne	.-22     	; 0x654 <__mulsf3_pse+0x64>
 66a:	9e 3f       	cpi	r25, 0xFE	; 254
 66c:	51 05       	cpc	r21, r1
 66e:	80 f0       	brcs	.+32     	; 0x690 <__mulsf3_pse+0xa0>
 670:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 674:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>
 678:	5f 3f       	cpi	r21, 0xFF	; 255
 67a:	e4 f3       	brlt	.-8      	; 0x674 <__mulsf3_pse+0x84>
 67c:	98 3e       	cpi	r25, 0xE8	; 232
 67e:	d4 f3       	brlt	.-12     	; 0x674 <__mulsf3_pse+0x84>
 680:	86 95       	lsr	r24
 682:	77 95       	ror	r23
 684:	67 95       	ror	r22
 686:	b7 95       	ror	r27
 688:	f7 95       	ror	r31
 68a:	e7 95       	ror	r30
 68c:	9f 5f       	subi	r25, 0xFF	; 255
 68e:	c1 f7       	brne	.-16     	; 0x680 <__mulsf3_pse+0x90>
 690:	fe 2b       	or	r31, r30
 692:	88 0f       	add	r24, r24
 694:	91 1d       	adc	r25, r1
 696:	96 95       	lsr	r25
 698:	87 95       	ror	r24
 69a:	97 f9       	bld	r25, 7
 69c:	08 95       	ret

0000069e <pow>:
 69e:	fa 01       	movw	r30, r20
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	30 96       	adiw	r30, 0x00	; 0
 6a6:	21 05       	cpc	r18, r1
 6a8:	31 05       	cpc	r19, r1
 6aa:	a1 f1       	breq	.+104    	; 0x714 <pow+0x76>
 6ac:	61 15       	cp	r22, r1
 6ae:	71 05       	cpc	r23, r1
 6b0:	61 f4       	brne	.+24     	; 0x6ca <pow+0x2c>
 6b2:	80 38       	cpi	r24, 0x80	; 128
 6b4:	bf e3       	ldi	r27, 0x3F	; 63
 6b6:	9b 07       	cpc	r25, r27
 6b8:	49 f1       	breq	.+82     	; 0x70c <pow+0x6e>
 6ba:	68 94       	set
 6bc:	90 38       	cpi	r25, 0x80	; 128
 6be:	81 05       	cpc	r24, r1
 6c0:	61 f0       	breq	.+24     	; 0x6da <pow+0x3c>
 6c2:	80 38       	cpi	r24, 0x80	; 128
 6c4:	bf ef       	ldi	r27, 0xFF	; 255
 6c6:	9b 07       	cpc	r25, r27
 6c8:	41 f0       	breq	.+16     	; 0x6da <pow+0x3c>
 6ca:	99 23       	and	r25, r25
 6cc:	4a f5       	brpl	.+82     	; 0x720 <pow+0x82>
 6ce:	ff 3f       	cpi	r31, 0xFF	; 255
 6d0:	e1 05       	cpc	r30, r1
 6d2:	31 05       	cpc	r19, r1
 6d4:	21 05       	cpc	r18, r1
 6d6:	19 f1       	breq	.+70     	; 0x71e <pow+0x80>
 6d8:	e8 94       	clt
 6da:	08 94       	sec
 6dc:	e7 95       	ror	r30
 6de:	d9 01       	movw	r26, r18
 6e0:	aa 23       	and	r26, r26
 6e2:	29 f4       	brne	.+10     	; 0x6ee <pow+0x50>
 6e4:	ab 2f       	mov	r26, r27
 6e6:	be 2f       	mov	r27, r30
 6e8:	f8 5f       	subi	r31, 0xF8	; 248
 6ea:	d0 f3       	brcs	.-12     	; 0x6e0 <pow+0x42>
 6ec:	10 c0       	rjmp	.+32     	; 0x70e <pow+0x70>
 6ee:	ff 5f       	subi	r31, 0xFF	; 255
 6f0:	70 f4       	brcc	.+28     	; 0x70e <pow+0x70>
 6f2:	a6 95       	lsr	r26
 6f4:	e0 f7       	brcc	.-8      	; 0x6ee <pow+0x50>
 6f6:	f7 39       	cpi	r31, 0x97	; 151
 6f8:	50 f0       	brcs	.+20     	; 0x70e <pow+0x70>
 6fa:	19 f0       	breq	.+6      	; 0x702 <pow+0x64>
 6fc:	ff 3a       	cpi	r31, 0xAF	; 175
 6fe:	38 f4       	brcc	.+14     	; 0x70e <pow+0x70>
 700:	9f 77       	andi	r25, 0x7F	; 127
 702:	9f 93       	push	r25
 704:	0d d0       	rcall	.+26     	; 0x720 <pow+0x82>
 706:	0f 90       	pop	r0
 708:	07 fc       	sbrc	r0, 7
 70a:	90 58       	subi	r25, 0x80	; 128
 70c:	08 95       	ret
 70e:	46 f0       	brts	.+16     	; 0x720 <pow+0x82>
 710:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>
 714:	60 e0       	ldi	r22, 0x00	; 0
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	80 e8       	ldi	r24, 0x80	; 128
 71a:	9f e3       	ldi	r25, 0x3F	; 63
 71c:	08 95       	ret
 71e:	4f e7       	ldi	r20, 0x7F	; 127
 720:	9f 77       	andi	r25, 0x7F	; 127
 722:	5f 93       	push	r21
 724:	4f 93       	push	r20
 726:	3f 93       	push	r19
 728:	2f 93       	push	r18
 72a:	0e 94 4a 04 	call	0x894	; 0x894 <log>
 72e:	2f 91       	pop	r18
 730:	3f 91       	pop	r19
 732:	4f 91       	pop	r20
 734:	5f 91       	pop	r21
 736:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__mulsf3>
 73a:	0c 94 a7 03 	jmp	0x74e	; 0x74e <exp>
 73e:	29 f4       	brne	.+10     	; 0x74a <pow+0xac>
 740:	16 f0       	brts	.+4      	; 0x746 <pow+0xa8>
 742:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 746:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_zero>
 74a:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>

0000074e <exp>:
 74e:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_splitA>
 752:	a8 f3       	brcs	.-22     	; 0x73e <pow+0xa0>
 754:	96 38       	cpi	r25, 0x86	; 134
 756:	a0 f7       	brcc	.-24     	; 0x740 <pow+0xa2>
 758:	07 f8       	bld	r0, 7
 75a:	0f 92       	push	r0
 75c:	e8 94       	clt
 75e:	2b e3       	ldi	r18, 0x3B	; 59
 760:	3a ea       	ldi	r19, 0xAA	; 170
 762:	48 eb       	ldi	r20, 0xB8	; 184
 764:	5f e7       	ldi	r21, 0x7F	; 127
 766:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__mulsf3_pse>
 76a:	0f 92       	push	r0
 76c:	0f 92       	push	r0
 76e:	0f 92       	push	r0
 770:	4d b7       	in	r20, 0x3d	; 61
 772:	5e b7       	in	r21, 0x3e	; 62
 774:	0f 92       	push	r0
 776:	0e 94 92 04 	call	0x924	; 0x924 <modf>
 77a:	e4 e5       	ldi	r30, 0x54	; 84
 77c:	f0 e0       	ldi	r31, 0x00	; 0
 77e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_powser>
 782:	4f 91       	pop	r20
 784:	5f 91       	pop	r21
 786:	ef 91       	pop	r30
 788:	ff 91       	pop	r31
 78a:	e5 95       	asr	r30
 78c:	ee 1f       	adc	r30, r30
 78e:	ff 1f       	adc	r31, r31
 790:	49 f0       	breq	.+18     	; 0x7a4 <exp+0x56>
 792:	fe 57       	subi	r31, 0x7E	; 126
 794:	e0 68       	ori	r30, 0x80	; 128
 796:	44 27       	eor	r20, r20
 798:	ee 0f       	add	r30, r30
 79a:	44 1f       	adc	r20, r20
 79c:	fa 95       	dec	r31
 79e:	e1 f7       	brne	.-8      	; 0x798 <exp+0x4a>
 7a0:	41 95       	neg	r20
 7a2:	55 0b       	sbc	r21, r21
 7a4:	0e 94 0c 04 	call	0x818	; 0x818 <ldexp>
 7a8:	0f 90       	pop	r0
 7aa:	07 fe       	sbrs	r0, 7
 7ac:	0c 94 00 04 	jmp	0x800	; 0x800 <inverse>
 7b0:	08 95       	ret

000007b2 <__fp_powser>:
 7b2:	df 93       	push	r29
 7b4:	cf 93       	push	r28
 7b6:	1f 93       	push	r17
 7b8:	0f 93       	push	r16
 7ba:	ff 92       	push	r15
 7bc:	ef 92       	push	r14
 7be:	df 92       	push	r13
 7c0:	7b 01       	movw	r14, r22
 7c2:	8c 01       	movw	r16, r24
 7c4:	68 94       	set
 7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <__fp_powser+0x22>
 7c8:	da 2e       	mov	r13, r26
 7ca:	ef 01       	movw	r28, r30
 7cc:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__mulsf3x>
 7d0:	fe 01       	movw	r30, r28
 7d2:	e8 94       	clt
 7d4:	a5 91       	lpm	r26, Z+
 7d6:	25 91       	lpm	r18, Z+
 7d8:	35 91       	lpm	r19, Z+
 7da:	45 91       	lpm	r20, Z+
 7dc:	55 91       	lpm	r21, Z+
 7de:	a6 f3       	brts	.-24     	; 0x7c8 <__fp_powser+0x16>
 7e0:	ef 01       	movw	r28, r30
 7e2:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3x>
 7e6:	fe 01       	movw	r30, r28
 7e8:	97 01       	movw	r18, r14
 7ea:	a8 01       	movw	r20, r16
 7ec:	da 94       	dec	r13
 7ee:	69 f7       	brne	.-38     	; 0x7ca <__fp_powser+0x18>
 7f0:	df 90       	pop	r13
 7f2:	ef 90       	pop	r14
 7f4:	ff 90       	pop	r15
 7f6:	0f 91       	pop	r16
 7f8:	1f 91       	pop	r17
 7fa:	cf 91       	pop	r28
 7fc:	df 91       	pop	r29
 7fe:	08 95       	ret

00000800 <inverse>:
 800:	9b 01       	movw	r18, r22
 802:	ac 01       	movw	r20, r24
 804:	60 e0       	ldi	r22, 0x00	; 0
 806:	70 e0       	ldi	r23, 0x00	; 0
 808:	80 e8       	ldi	r24, 0x80	; 128
 80a:	9f e3       	ldi	r25, 0x3F	; 63
 80c:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__divsf3>
 810:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 814:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__fp_mpack>

00000818 <ldexp>:
 818:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_splitA>
 81c:	d8 f3       	brcs	.-10     	; 0x814 <inverse+0x14>
 81e:	99 23       	and	r25, r25
 820:	c9 f3       	breq	.-14     	; 0x814 <inverse+0x14>
 822:	94 0f       	add	r25, r20
 824:	51 1d       	adc	r21, r1
 826:	a3 f3       	brvs	.-24     	; 0x810 <inverse+0x10>
 828:	91 50       	subi	r25, 0x01	; 1
 82a:	50 40       	sbci	r21, 0x00	; 0
 82c:	94 f0       	brlt	.+36     	; 0x852 <ldexp+0x3a>
 82e:	59 f0       	breq	.+22     	; 0x846 <ldexp+0x2e>
 830:	88 23       	and	r24, r24
 832:	32 f0       	brmi	.+12     	; 0x840 <ldexp+0x28>
 834:	66 0f       	add	r22, r22
 836:	77 1f       	adc	r23, r23
 838:	88 1f       	adc	r24, r24
 83a:	91 50       	subi	r25, 0x01	; 1
 83c:	50 40       	sbci	r21, 0x00	; 0
 83e:	c1 f7       	brne	.-16     	; 0x830 <ldexp+0x18>
 840:	9e 3f       	cpi	r25, 0xFE	; 254
 842:	51 05       	cpc	r21, r1
 844:	2c f7       	brge	.-54     	; 0x810 <inverse+0x10>
 846:	88 0f       	add	r24, r24
 848:	91 1d       	adc	r25, r1
 84a:	96 95       	lsr	r25
 84c:	87 95       	ror	r24
 84e:	97 f9       	bld	r25, 7
 850:	08 95       	ret
 852:	5f 3f       	cpi	r21, 0xFF	; 255
 854:	ac f0       	brlt	.+42     	; 0x880 <ldexp+0x68>
 856:	98 3e       	cpi	r25, 0xE8	; 232
 858:	9c f0       	brlt	.+38     	; 0x880 <ldexp+0x68>
 85a:	bb 27       	eor	r27, r27
 85c:	86 95       	lsr	r24
 85e:	77 95       	ror	r23
 860:	67 95       	ror	r22
 862:	b7 95       	ror	r27
 864:	08 f4       	brcc	.+2      	; 0x868 <ldexp+0x50>
 866:	b1 60       	ori	r27, 0x01	; 1
 868:	93 95       	inc	r25
 86a:	c1 f7       	brne	.-16     	; 0x85c <ldexp+0x44>
 86c:	bb 0f       	add	r27, r27
 86e:	58 f7       	brcc	.-42     	; 0x846 <ldexp+0x2e>
 870:	11 f4       	brne	.+4      	; 0x876 <ldexp+0x5e>
 872:	60 ff       	sbrs	r22, 0
 874:	e8 cf       	rjmp	.-48     	; 0x846 <ldexp+0x2e>
 876:	6f 5f       	subi	r22, 0xFF	; 255
 878:	7f 4f       	sbci	r23, 0xFF	; 255
 87a:	8f 4f       	sbci	r24, 0xFF	; 255
 87c:	9f 4f       	sbci	r25, 0xFF	; 255
 87e:	e3 cf       	rjmp	.-58     	; 0x846 <ldexp+0x2e>
 880:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>
 884:	16 f0       	brts	.+4      	; 0x88a <ldexp+0x72>
 886:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__fp_mpack>
 88a:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>
 88e:	68 94       	set
 890:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>

00000894 <log>:
 894:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_splitA>
 898:	a8 f3       	brcs	.-22     	; 0x884 <ldexp+0x6c>
 89a:	99 23       	and	r25, r25
 89c:	c1 f3       	breq	.-16     	; 0x88e <ldexp+0x76>
 89e:	ae f3       	brts	.-22     	; 0x88a <ldexp+0x72>
 8a0:	df 93       	push	r29
 8a2:	cf 93       	push	r28
 8a4:	1f 93       	push	r17
 8a6:	0f 93       	push	r16
 8a8:	ff 92       	push	r15
 8aa:	c9 2f       	mov	r28, r25
 8ac:	dd 27       	eor	r29, r29
 8ae:	88 23       	and	r24, r24
 8b0:	2a f0       	brmi	.+10     	; 0x8bc <log+0x28>
 8b2:	21 97       	sbiw	r28, 0x01	; 1
 8b4:	66 0f       	add	r22, r22
 8b6:	77 1f       	adc	r23, r23
 8b8:	88 1f       	adc	r24, r24
 8ba:	da f7       	brpl	.-10     	; 0x8b2 <log+0x1e>
 8bc:	20 e0       	ldi	r18, 0x00	; 0
 8be:	30 e0       	ldi	r19, 0x00	; 0
 8c0:	40 e8       	ldi	r20, 0x80	; 128
 8c2:	5f eb       	ldi	r21, 0xBF	; 191
 8c4:	9f e3       	ldi	r25, 0x3F	; 63
 8c6:	88 39       	cpi	r24, 0x98	; 152
 8c8:	20 f0       	brcs	.+8      	; 0x8d2 <log+0x3e>
 8ca:	80 3e       	cpi	r24, 0xE0	; 224
 8cc:	38 f0       	brcs	.+14     	; 0x8dc <log+0x48>
 8ce:	21 96       	adiw	r28, 0x01	; 1
 8d0:	8f 77       	andi	r24, 0x7F	; 127
 8d2:	0e 94 b2 01 	call	0x364	; 0x364 <__addsf3>
 8d6:	ec e7       	ldi	r30, 0x7C	; 124
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	04 c0       	rjmp	.+8      	; 0x8e4 <log+0x50>
 8dc:	0e 94 b2 01 	call	0x364	; 0x364 <__addsf3>
 8e0:	e9 ea       	ldi	r30, 0xA9	; 169
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_powser>
 8e8:	8b 01       	movw	r16, r22
 8ea:	be 01       	movw	r22, r28
 8ec:	ec 01       	movw	r28, r24
 8ee:	fb 2e       	mov	r15, r27
 8f0:	6f 57       	subi	r22, 0x7F	; 127
 8f2:	71 09       	sbc	r23, r1
 8f4:	75 95       	asr	r23
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 0b       	sbc	r24, r24
 8fa:	99 0b       	sbc	r25, r25
 8fc:	0e 94 56 02 	call	0x4ac	; 0x4ac <__floatsisf>
 900:	28 e1       	ldi	r18, 0x18	; 24
 902:	32 e7       	ldi	r19, 0x72	; 114
 904:	41 e3       	ldi	r20, 0x31	; 49
 906:	5f e3       	ldi	r21, 0x3F	; 63
 908:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__mulsf3x>
 90c:	af 2d       	mov	r26, r15
 90e:	98 01       	movw	r18, r16
 910:	ae 01       	movw	r20, r28
 912:	ff 90       	pop	r15
 914:	0f 91       	pop	r16
 916:	1f 91       	pop	r17
 918:	cf 91       	pop	r28
 91a:	df 91       	pop	r29
 91c:	0e 94 c9 01 	call	0x392	; 0x392 <__addsf3x>
 920:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_round>

00000924 <modf>:
 924:	fa 01       	movw	r30, r20
 926:	dc 01       	movw	r26, r24
 928:	aa 0f       	add	r26, r26
 92a:	bb 1f       	adc	r27, r27
 92c:	9b 01       	movw	r18, r22
 92e:	ac 01       	movw	r20, r24
 930:	bf 57       	subi	r27, 0x7F	; 127
 932:	28 f4       	brcc	.+10     	; 0x93e <modf+0x1a>
 934:	22 27       	eor	r18, r18
 936:	33 27       	eor	r19, r19
 938:	44 27       	eor	r20, r20
 93a:	50 78       	andi	r21, 0x80	; 128
 93c:	20 c0       	rjmp	.+64     	; 0x97e <modf+0x5a>
 93e:	b7 51       	subi	r27, 0x17	; 23
 940:	90 f4       	brcc	.+36     	; 0x966 <modf+0x42>
 942:	ab 2f       	mov	r26, r27
 944:	00 24       	eor	r0, r0
 946:	46 95       	lsr	r20
 948:	37 95       	ror	r19
 94a:	27 95       	ror	r18
 94c:	01 1c       	adc	r0, r1
 94e:	a3 95       	inc	r26
 950:	d2 f3       	brmi	.-12     	; 0x946 <modf+0x22>
 952:	00 20       	and	r0, r0
 954:	71 f0       	breq	.+28     	; 0x972 <modf+0x4e>
 956:	22 0f       	add	r18, r18
 958:	33 1f       	adc	r19, r19
 95a:	44 1f       	adc	r20, r20
 95c:	b3 95       	inc	r27
 95e:	da f3       	brmi	.-10     	; 0x956 <modf+0x32>
 960:	0e d0       	rcall	.+28     	; 0x97e <modf+0x5a>
 962:	0c 94 b1 01 	jmp	0x362	; 0x362 <__subsf3>
 966:	61 30       	cpi	r22, 0x01	; 1
 968:	71 05       	cpc	r23, r1
 96a:	a0 e8       	ldi	r26, 0x80	; 128
 96c:	8a 07       	cpc	r24, r26
 96e:	b9 46       	sbci	r27, 0x69	; 105
 970:	30 f4       	brcc	.+12     	; 0x97e <modf+0x5a>
 972:	9b 01       	movw	r18, r22
 974:	ac 01       	movw	r20, r24
 976:	66 27       	eor	r22, r22
 978:	77 27       	eor	r23, r23
 97a:	88 27       	eor	r24, r24
 97c:	90 78       	andi	r25, 0x80	; 128
 97e:	30 96       	adiw	r30, 0x00	; 0
 980:	21 f0       	breq	.+8      	; 0x98a <modf+0x66>
 982:	20 83       	st	Z, r18
 984:	31 83       	std	Z+1, r19	; 0x01
 986:	42 83       	std	Z+2, r20	; 0x02
 988:	53 83       	std	Z+3, r21	; 0x03
 98a:	08 95       	ret

0000098c <__divsf3>:
 98c:	0e 94 da 04 	call	0x9b4	; 0x9b4 <__divsf3x>
 990:	0c 94 a8 02 	jmp	0x550	; 0x550 <__fp_round>
 994:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_pscB>
 998:	58 f0       	brcs	.+22     	; 0x9b0 <__divsf3+0x24>
 99a:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_pscA>
 99e:	40 f0       	brcs	.+16     	; 0x9b0 <__divsf3+0x24>
 9a0:	29 f4       	brne	.+10     	; 0x9ac <__divsf3+0x20>
 9a2:	5f 3f       	cpi	r21, 0xFF	; 255
 9a4:	29 f0       	breq	.+10     	; 0x9b0 <__divsf3+0x24>
 9a6:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 9aa:	51 11       	cpse	r21, r1
 9ac:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>
 9b0:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_nan>

000009b4 <__divsf3x>:
 9b4:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_split3>
 9b8:	68 f3       	brcs	.-38     	; 0x994 <__divsf3+0x8>

000009ba <__divsf3_pse>:
 9ba:	99 23       	and	r25, r25
 9bc:	b1 f3       	breq	.-20     	; 0x9aa <__divsf3+0x1e>
 9be:	55 23       	and	r21, r21
 9c0:	91 f3       	breq	.-28     	; 0x9a6 <__divsf3+0x1a>
 9c2:	95 1b       	sub	r25, r21
 9c4:	55 0b       	sbc	r21, r21
 9c6:	bb 27       	eor	r27, r27
 9c8:	aa 27       	eor	r26, r26
 9ca:	62 17       	cp	r22, r18
 9cc:	73 07       	cpc	r23, r19
 9ce:	84 07       	cpc	r24, r20
 9d0:	38 f0       	brcs	.+14     	; 0x9e0 <__divsf3_pse+0x26>
 9d2:	9f 5f       	subi	r25, 0xFF	; 255
 9d4:	5f 4f       	sbci	r21, 0xFF	; 255
 9d6:	22 0f       	add	r18, r18
 9d8:	33 1f       	adc	r19, r19
 9da:	44 1f       	adc	r20, r20
 9dc:	aa 1f       	adc	r26, r26
 9de:	a9 f3       	breq	.-22     	; 0x9ca <__divsf3_pse+0x10>
 9e0:	35 d0       	rcall	.+106    	; 0xa4c <__divsf3_pse+0x92>
 9e2:	0e 2e       	mov	r0, r30
 9e4:	3a f0       	brmi	.+14     	; 0x9f4 <__divsf3_pse+0x3a>
 9e6:	e0 e8       	ldi	r30, 0x80	; 128
 9e8:	32 d0       	rcall	.+100    	; 0xa4e <__divsf3_pse+0x94>
 9ea:	91 50       	subi	r25, 0x01	; 1
 9ec:	50 40       	sbci	r21, 0x00	; 0
 9ee:	e6 95       	lsr	r30
 9f0:	00 1c       	adc	r0, r0
 9f2:	ca f7       	brpl	.-14     	; 0x9e6 <__divsf3_pse+0x2c>
 9f4:	2b d0       	rcall	.+86     	; 0xa4c <__divsf3_pse+0x92>
 9f6:	fe 2f       	mov	r31, r30
 9f8:	29 d0       	rcall	.+82     	; 0xa4c <__divsf3_pse+0x92>
 9fa:	66 0f       	add	r22, r22
 9fc:	77 1f       	adc	r23, r23
 9fe:	88 1f       	adc	r24, r24
 a00:	bb 1f       	adc	r27, r27
 a02:	26 17       	cp	r18, r22
 a04:	37 07       	cpc	r19, r23
 a06:	48 07       	cpc	r20, r24
 a08:	ab 07       	cpc	r26, r27
 a0a:	b0 e8       	ldi	r27, 0x80	; 128
 a0c:	09 f0       	breq	.+2      	; 0xa10 <__divsf3_pse+0x56>
 a0e:	bb 0b       	sbc	r27, r27
 a10:	80 2d       	mov	r24, r0
 a12:	bf 01       	movw	r22, r30
 a14:	ff 27       	eor	r31, r31
 a16:	93 58       	subi	r25, 0x83	; 131
 a18:	5f 4f       	sbci	r21, 0xFF	; 255
 a1a:	3a f0       	brmi	.+14     	; 0xa2a <__divsf3_pse+0x70>
 a1c:	9e 3f       	cpi	r25, 0xFE	; 254
 a1e:	51 05       	cpc	r21, r1
 a20:	78 f0       	brcs	.+30     	; 0xa40 <__divsf3_pse+0x86>
 a22:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_inf>
 a26:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__fp_szero>
 a2a:	5f 3f       	cpi	r21, 0xFF	; 255
 a2c:	e4 f3       	brlt	.-8      	; 0xa26 <__divsf3_pse+0x6c>
 a2e:	98 3e       	cpi	r25, 0xE8	; 232
 a30:	d4 f3       	brlt	.-12     	; 0xa26 <__divsf3_pse+0x6c>
 a32:	86 95       	lsr	r24
 a34:	77 95       	ror	r23
 a36:	67 95       	ror	r22
 a38:	b7 95       	ror	r27
 a3a:	f7 95       	ror	r31
 a3c:	9f 5f       	subi	r25, 0xFF	; 255
 a3e:	c9 f7       	brne	.-14     	; 0xa32 <__divsf3_pse+0x78>
 a40:	88 0f       	add	r24, r24
 a42:	91 1d       	adc	r25, r1
 a44:	96 95       	lsr	r25
 a46:	87 95       	ror	r24
 a48:	97 f9       	bld	r25, 7
 a4a:	08 95       	ret
 a4c:	e1 e0       	ldi	r30, 0x01	; 1
 a4e:	66 0f       	add	r22, r22
 a50:	77 1f       	adc	r23, r23
 a52:	88 1f       	adc	r24, r24
 a54:	bb 1f       	adc	r27, r27
 a56:	62 17       	cp	r22, r18
 a58:	73 07       	cpc	r23, r19
 a5a:	84 07       	cpc	r24, r20
 a5c:	ba 07       	cpc	r27, r26
 a5e:	20 f0       	brcs	.+8      	; 0xa68 <__divsf3_pse+0xae>
 a60:	62 1b       	sub	r22, r18
 a62:	73 0b       	sbc	r23, r19
 a64:	84 0b       	sbc	r24, r20
 a66:	ba 0b       	sbc	r27, r26
 a68:	ee 1f       	adc	r30, r30
 a6a:	88 f7       	brcc	.-30     	; 0xa4e <__divsf3_pse+0x94>
 a6c:	e0 95       	com	r30
 a6e:	08 95       	ret

00000a70 <__fp_mpack>:
 a70:	9f 3f       	cpi	r25, 0xFF	; 255
 a72:	31 f0       	breq	.+12     	; 0xa80 <__fp_mpack_finite+0xc>

00000a74 <__fp_mpack_finite>:
 a74:	91 50       	subi	r25, 0x01	; 1
 a76:	20 f4       	brcc	.+8      	; 0xa80 <__fp_mpack_finite+0xc>
 a78:	87 95       	ror	r24
 a7a:	77 95       	ror	r23
 a7c:	67 95       	ror	r22
 a7e:	b7 95       	ror	r27
 a80:	88 0f       	add	r24, r24
 a82:	91 1d       	adc	r25, r1
 a84:	96 95       	lsr	r25
 a86:	87 95       	ror	r24
 a88:	97 f9       	bld	r25, 7
 a8a:	08 95       	ret

00000a8c <__udivmodsi4>:
 a8c:	a1 e2       	ldi	r26, 0x21	; 33
 a8e:	1a 2e       	mov	r1, r26
 a90:	aa 1b       	sub	r26, r26
 a92:	bb 1b       	sub	r27, r27
 a94:	fd 01       	movw	r30, r26
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <__udivmodsi4_ep>

00000a98 <__udivmodsi4_loop>:
 a98:	aa 1f       	adc	r26, r26
 a9a:	bb 1f       	adc	r27, r27
 a9c:	ee 1f       	adc	r30, r30
 a9e:	ff 1f       	adc	r31, r31
 aa0:	a2 17       	cp	r26, r18
 aa2:	b3 07       	cpc	r27, r19
 aa4:	e4 07       	cpc	r30, r20
 aa6:	f5 07       	cpc	r31, r21
 aa8:	20 f0       	brcs	.+8      	; 0xab2 <__udivmodsi4_ep>
 aaa:	a2 1b       	sub	r26, r18
 aac:	b3 0b       	sbc	r27, r19
 aae:	e4 0b       	sbc	r30, r20
 ab0:	f5 0b       	sbc	r31, r21

00000ab2 <__udivmodsi4_ep>:
 ab2:	66 1f       	adc	r22, r22
 ab4:	77 1f       	adc	r23, r23
 ab6:	88 1f       	adc	r24, r24
 ab8:	99 1f       	adc	r25, r25
 aba:	1a 94       	dec	r1
 abc:	69 f7       	brne	.-38     	; 0xa98 <__udivmodsi4_loop>
 abe:	60 95       	com	r22
 ac0:	70 95       	com	r23
 ac2:	80 95       	com	r24
 ac4:	90 95       	com	r25
 ac6:	9b 01       	movw	r18, r22
 ac8:	ac 01       	movw	r20, r24
 aca:	bd 01       	movw	r22, r26
 acc:	cf 01       	movw	r24, r30
 ace:	08 95       	ret

00000ad0 <__divmodsi4>:
 ad0:	05 2e       	mov	r0, r21
 ad2:	97 fb       	bst	r25, 7
 ad4:	1e f4       	brtc	.+6      	; 0xadc <__divmodsi4+0xc>
 ad6:	00 94       	com	r0
 ad8:	0e 94 7f 05 	call	0xafe	; 0xafe <__negsi2>
 adc:	57 fd       	sbrc	r21, 7
 ade:	07 d0       	rcall	.+14     	; 0xaee <__divmodsi4_neg2>
 ae0:	0e 94 46 05 	call	0xa8c	; 0xa8c <__udivmodsi4>
 ae4:	07 fc       	sbrc	r0, 7
 ae6:	03 d0       	rcall	.+6      	; 0xaee <__divmodsi4_neg2>
 ae8:	4e f4       	brtc	.+18     	; 0xafc <__divmodsi4_exit>
 aea:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__negsi2>

00000aee <__divmodsi4_neg2>:
 aee:	50 95       	com	r21
 af0:	40 95       	com	r20
 af2:	30 95       	com	r19
 af4:	21 95       	neg	r18
 af6:	3f 4f       	sbci	r19, 0xFF	; 255
 af8:	4f 4f       	sbci	r20, 0xFF	; 255
 afa:	5f 4f       	sbci	r21, 0xFF	; 255

00000afc <__divmodsi4_exit>:
 afc:	08 95       	ret

00000afe <__negsi2>:
 afe:	90 95       	com	r25
 b00:	80 95       	com	r24
 b02:	70 95       	com	r23
 b04:	61 95       	neg	r22
 b06:	7f 4f       	sbci	r23, 0xFF	; 255
 b08:	8f 4f       	sbci	r24, 0xFF	; 255
 b0a:	9f 4f       	sbci	r25, 0xFF	; 255
 b0c:	08 95       	ret

00000b0e <_exit>:
 b0e:	f8 94       	cli

00000b10 <__stop_program>:
 b10:	ff cf       	rjmp	.-2      	; 0xb10 <__stop_program>
